<!DOCTYPE html>
<html lang="en">
{{> header}}
<body>
  {{> navbar}}
  <div class="jumbotron text-center">
    <h1>Chart</h1>
    <p>Chart of data readings</p>
  </div>

  <div class="row container-fluid">
    <div class="col-md-12">
      <canvas id="myChart" width="400" height="200"></canvas>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>
      <script>
      //------------- chart.js ------------------
      var N= 10;
      var lightArray =[];
      // for(var i=0; i<N; i++) {
      //   lightArray.push(0);
      // }


      var mydata = {
        //labels: lightArray,
        datasets: [
          {
            label: "Light Value",
            data: lightArray,
          }
        ],
      };

      var ctx = document.getElementById('myChart').getContext('2d');
      //var chart = new Chart(ctx).Line(data);

      var chart = new Chart(ctx, {
          // The type of chart we want to create
          type: 'line',

          // The data for our dataset
            data: mydata,

          // Configuration options go here
          options: {}
        });

        // function addData(chart, label, data) {
        //   chart.data.labels.push(label);
        //   chart.data.datasets.forEach((dataset) => {
        //     dataset.data.push(data);
        //   });
        //   chart.update();
        // }
        //
        // function removeData(chart) {
        //   console.log(chart.data.datasets[0].data.length);
        //   if (chart.data.datasets[0].data.length > 10){
        //     chart.data.labels.shift();
        //     chart.data.datasets.forEach((dataset) => {
        //       dataset.data.shift();
        //     });
        //   }
        //
        //   chart.update();
        // }


        function moveChart(chart, newLabel, newData) {
          var removeDataAtLeft = false;
          if (chart.data.datasets[0].data.length > 10) {
            removeDataAtLeft = true;
          }
          chart.data.labels.push(newLabel); //add new label at the right
          if (removeDataAtLeft) {
            chart.data.labels.splice(0,1); //remove first label at left
          }

          chart.data.datasets.forEach(function(dataset, index){
            dataset.data.push(newData); //add new data at right
            if (removeDataAtLeft) {
              dataset.data.splice(0,1); //remove first data at left
            }
          });
          chart.update();
        }

        //------------ ajax -----------
        $(document).ready(function(){
          // var $light = $('#light');
          const AUTH = 'd71ef867ed0f4a4b821d1f6d42b2abf9';
          const reqUrl = `http://blynk-cloud.com/${AUTH}/get/V5`;
          var labelx = 1;

          setInterval(function(){
            $.ajax({
              type: 'GET',
              url: reqUrl,
              success: function(result){
                //chart.removeData();
                //chart.addData(parseInt(result), labelx++);
                //removeData(chart);
                //addData(chart,labelx++,parseInt(result));
                moveChart(chart,labelx++,parseInt(result));
              },
              error: function(){
                console.log('Error in getting light');
              },
            });
          }, 2000);

        });

      </script>
    </div>
  </div>
</body>
</html>
